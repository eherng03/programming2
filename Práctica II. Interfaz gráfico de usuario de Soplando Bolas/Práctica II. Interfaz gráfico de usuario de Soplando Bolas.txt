Práctica II. Interfaz gráfico de usuario de Soplando Bolas
Disponible desde: lunes, 25 de enero de 2016, 17:35
Límite de entrega: lunes, 25 de enero de 2016, 18:25
Número máximo de ficheros: 20
Tipo de trabajo: Trabajo individual

En esta segunda práctica del curso se deberá crear un programa con un interfaz gráfico de usuario desarrollado en Swing que permita crear, editar y resolver, manual y automáticamente, un solitario "Soplando bolas" definido en la práctica I de la asignatura. La aplicación manejará dos tipos de ventanas, una para la resolución de solitarios  y otra para la edición de solitarios. La funcionalidad que deberá tener la aplicación en cada una de esas ventanas será la siguiente:

    La ventana principal será utilizada como una ventana de resolución de un solitario. En cada momento sólo se podrá estar resolviendo un solitario. La ventana de edición servirá para crear y editar solitarios Soplando Bolas. En un momento dado se podrá estar editando varios solitarios simultáneamente. Cada ventana contendrá una barra de  menú con los menús Archivo, Editar, Resolver y Ayuda, que serán diferentes según la ventana que esté activa.
        El menú Archivo tendrá los siguientes items de menú:
            Nuevo: Abre una nueva ventana de edición para editar un nuevo solitario. A continuación abre un diálogo  para que el usuario pueda definir el tamaño del tablero del nuevo solitario y el número de bolas. Una vez definido,  el usuario podrá definir la ubicación de las posiciones finales y la ubicación de las posiciones iniciales de las bolas de forma gráfica, es decir el usuario hará clic en las posiciones adecuadas para ir definiéndolas en la ventana de edición.
            Cargar: Carga un solitario para resolver desde un fichero de texto, eliminando el actual que se estuviese resolviendo. Si éste último no hubiese sido grabado se dará la posibilidad al usuario de hacerlo. El formato del fichero de texto para almacenar un solitario es el dado en la práctica 1. Si el formato del fichero es incorrecto, se le avisará al usuario  y no se cargará el juego, manteniendo el actual si lo hubiese.
            Salvar: Graba el solitario actual al fichero asociado al mismo. El solitario se graba con las posiciones que tengan las bolas en ese momento. Si no hay ningún fichero asociado, el menú se comportará como si fuera el menú Salvar como. En la ventana de resolución se grabará el solitario que se está resolviendo, en una de edición el que se esté editando.
            Salvar como: Abre un cuadro de diálogo para que el usuario pueda elegir un nombre de fichero y una ubicación para almacenar el solitario en su posición actual. Si el nombre del fichero elegido por el usuario es el de un fichero que existe y que se sobrescribiría de grabar en él, se avisará al usuario y se le ofrecerá la posibilidad de cancelar la grabación. 
            Salir: sale de la aplicación. Si el solitario a resolver actual  o los solitarios que se estén editando no han sido grabados, se le ofrecerá la posibilidad al usuario de que los grabe.
        El menú Editar tendrá los siguientes items de menú:
            Deshacer. Deshace la última operación que se ha realizado en la ventana activa. Si es de resolución será el último soplo realizado por el usuario sobre una bola, si es de edición la última operación de edición realizada. El programa mantendrá una lista de las operaciones realizadas por el usuario en el solitario actual y con esta opción se podrán deshacer todas las operaciones realizadas.
            Rehacer. Rehace una operación previamente deshecha por el usuario.
            Editar: abre en una ventana de edición el solitario actual que se está resolviendo. Si no hay solitario cargado éste botón deberá estar desactivado.
        El menú Resolver contendrá los items:
            Resolver: Abre en la ventana de resolución el solitario que se está editando. Estará desactivado si la ventana no es de edición. Si hay un solitario resolviéndose y no se ha grabado se avisará al usuario para que pueda grabarlo. 
            Resolver automáticamente. Resuelve automáticamente el solitario. Da la solución desde la posición actual. Optativamente se mostrará la solución de forma animada, es decir movimiento por movimiento.
        El menú Ayuda mostrará una ayuda al usuario para usar el programa. Se diseñará una parte específica para el profesor indicándole instrucciones especiales de la aplicación. 

El alumno deberá decidir todos aquellos elementos de diseño que no se hayan cubierto en la descripción anterior, de forma que la edición y resolución de solitarios Soplando Bolas se realice adecuadamente.

Este programa no se evaluará mediante tests, sino manualmente por parte del profesorado. Se valorará cubrir la funcionalidad del programa, la adecuación del diseño a las tareas a realizar en el programa y la parte opcional.

En el examen final también se deberán realizar cambios a este programa por parte del alumno.

NOTA: Si se desean usar imágenes en el programa, deben enviarse a través del VPL en codificación base64.  Tanto en Linux como en Mac OSX existe una herramienta base64 para codificar ficheros en base 64. Para Windows, existen herramientas gratuitas. Si por ejemplo quiero usar la imagen bola.png en mi programa, lo que debo de hacer es codificar el fichero en base 64, lo que en Mac OSX se haría en la terminal mediante el comando base64 -i bola.png -o bola.png.b64 (En linux el comando es base64 < bola.png > bola.png.b64).  La extensión b64 es obligatoria para que VPL interprete el fichero como un fichero codificado en base 64 y lo descodifique en el momento de evaluar la práctica. El fichero que se debe subir en la entrega por tanto es el fichero bola.png.b64. Se ha aumentado el número de ficheros que se pueden subir a 20.  
English Translation

In this second programming practice of the course, you should create a program with a graphical user interface developed in Swing that allows to create, edit and solve manually and automatically, a puff-ball  puzzle  defined in Programming Practice I. The application will handle two types of windows, one for the resolution of a puff-ball puzzle and another for editing it. The functionality must have the application in each of these windows is as follows:

    The main window will be used as a resolution window. In every moment you can only be solving a puzzle. The edition window will create and edit puzzles. At one point it may be editing several puzzle simultaneously. Each window contains a menu bar with Archivo, Editar, Resolver and Ayuda menus, which will be different depending on the active window.

        The Archivo menu has the following menu items:
            Nuevo: Opens a new window to edit a new puff-ball puzzle. Then open a dialog for the user to define the size of the board of the new puzzle and the number of balls (which is equal to the number of ending positions). Once defined both numbers, the user can graphically define the location of ending positions and location of the initial positions of the balls, ie the user will click on the appropriate cells to define the positions.
            Cargar: Load a puzzle to solve from a text file, eliminating the current if exists. If the latter had not been recorded it will enables users to do so. The text file format to store a puzzle is given in programming practice I. If the file format is wrong, it will alert the user and the game does not load, maintaining the current if any.
            Salvar: Save the current puzzle to the associated file. The puzzle is recorded with the ball positions having at that time. If there is not associated file, the menu will behave as the "Salvar como" menu. In the resolution window the puzzle being solved will be save, in the edition window, the puzzle that is being edited is recorded.
            Salvar como: Opens a dialog box to allow the user to choose a file name and a location to store the puzzle in his current position. If the file name chosen by the user is a file that exists, the user is notified and given the option to cancel the recording.
            Salir: exits the application. If the current puzzle being edited or solved have not been recorded, it will offer the user the possibility to save it.
        The Editar menu has the following menu items:
            Deshacer: Undo the last operation has been performed in the active window. If it is a resolution window, it would be the last breath made by the user on a ball, if it is a edition window  the last editing operation will be undone. The program will maintain a list of operations performed by the user in the current puzzle and with this option the user can undo all performed operations.
            Rehacer: Redo previously undone operation by the user.
            Editar: Opens an editing window in the current being solved puzzle. This button should be disabled if no puzzle is charged.
        Resolver menu item contains:
            Resolver: Opens in the resolution window the puzzle that is being edited. It is disabled if the window is not an edition window. If a puzzle is being resolved and has not been recorded you will be notified to the user so he can salve it.
            Resolver automáticamente:  Automatically solves the puzzle. Give the solution from the current position. Optionally the solution can be displayed in an animated way, movement by movement.
        The Help menu display help to the user for using the program. There will be a special part with specific instructions for helping to the professor to evaluate the application.

Students must decide all those design elements that are not covered in the above description, so the user can edit and solve puzzle properly.

This program will not  be evaluate by tests, but manually by the teacher. It will be assessed to cover the program's functionality, the adequacy of the design to the tasks in the program and the optional part.
In the final exam also some changes to this program by the student must be done.

NOTE: If you want to use images in the program, they should be submitted through the VPL in base64 encoding. Both Linux and Mac OSX have a tool to encode base64 based files. For Windows, there are free tools. If for example I want to use the image bola.png in my program, I should encode the file in base 64, which in Mac OS X would be done in the terminal using the command base64 -i -o bola.png ball. png.b64 (In linux the command is base64 <bola.png> bola.png.b64). The b64 extension is mandatory for VPL interpret the file as a base 64 encoded file and decode at the time of assessment practice. The file to be uploaded in the submit is therefore the bola.png.b64 file. The number of files that can be submitted has been increased to 20.